"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getOBJSchema = void 0;
const schema_1 = require("@loaders.gl/schema");
function getOBJSchema(attributes, metadata = {}) {
    let metadataMap;
    for (const key in metadata) {
        metadataMap = metadataMap || new Map();
        if (key !== 'value') {
            metadataMap.set(key, JSON.stringify(metadata[key]));
        }
    }
    const fields = [];
    for (const attributeName in attributes) {
        const attribute = attributes[attributeName];
        const field = getArrowFieldFromAttribute(attributeName, attribute);
        fields.push(field);
    }
    return new schema_1.Schema(fields, metadataMap);
}
exports.getOBJSchema = getOBJSchema;
function getArrowFieldFromAttribute(attributeName, attribute) {
    const metadataMap = new Map();
    for (const key in attribute) {
        if (key !== 'value') {
            metadataMap.set(key, JSON.stringify(attribute[key]));
        }
    }
    const type = (0, schema_1.getArrowTypeFromTypedArray)(attribute.value);
    const isSingleValue = !('size' in attribute) || attribute.size === 1;
    return isSingleValue
        ? new schema_1.Field(attributeName, type, false, metadataMap)
        : new schema_1.Field(attributeName, new schema_1.FixedSizeList(attribute.size, new schema_1.Field('value', type)), false, metadataMap);
}
